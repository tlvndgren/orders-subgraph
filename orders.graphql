"An individual order object."
type Order @key(fields: "id") {
    "Internal order ID for db mapping."
    id: ID!
    "Products associated with the order."
    products: [Product]
    "The user the order belongs to."
    user: User!
}

type Product @key(fields: "id", resolvable: false) {
    id: ID!
}

type User @key(fields: "id") {
    id: ID!
    orders: [Order]
}

type Query {
    "Get a list of all orders."
    orders: [Order]
    "Get a single order."
    order(id: ID!): Order
}

extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.5",
        import: ["@key"])
  @contact(
    name: "Tom's @Order Server Team"
    url: "https://myteam.slack.com/archives/teams-chat-room-url"
    description: "send urgent issues to [#users-oncall](https://yourteam.slack.com/archives/oncall)."
  )

directive @tag(name: String!) repeatable on
  | FIELD_DEFINITION
  | INTERFACE
  | OBJECT
  | UNION

directive @contact(
  "Contact title of the subgraph owner"
  name: String!
  "URL where the subgraph's owner can be reached"
  url: String
  "Other relevant notes can be included here; supports markdown links"
  description: String
) on SCHEMA